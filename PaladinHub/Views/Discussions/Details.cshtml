@model PaladinHub.Models.Discussions.PostDetailsViewModel
@{
    ViewData["Title"] = Model.Post.Title;

    var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    bool alreadyLikedPost = Model.Post.LikesCollection?.Any(l => l.UserId == userId) ?? false;
}
<link rel="stylesheet" href="/text.css" />

<div class="section-wrapper mb-3 d-flex gap-2">
    <a class="btn btn-outline-primary" asp-action="Index">
        ← Back to Discussions
    </a>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        var isAdmin = User.IsInRole("Admin");
        if (isAdmin || Model.Post.AuthorId == userId)
        {
            <form asp-action="Delete" asp-route-id="@Model.Post.Id" method="post" class="d-inline">
                <button type="submit" class="btn btn-outline-danger"
                        onclick="return confirm('Are you sure you want to delete this discussion?');">
                    <i class="fa-solid fa-trash"></i> Delete Discussion
                </button>
            </form>
        }
    }
</div>

<div class="discussion-item p-3" style="background-color:#1a1a1a; border:1px solid #FFD700; border-radius:6px;">
    <h2 class="mb-1">@Model.Post.Title</h2>
    <div class="discussion-meta text-muted mb-3" style="font-size:0.9rem;">
        by <span class="highlight">@Model.Post.Author.UserName</span> • @Model.Post.CreatedOn.ToLocalTime()
    </div>
    <p class="mt-2">@Model.Post.Content</p>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <form asp-action="Like" asp-route-id="@Model.Post.Id" method="post" class="mb-3">
            <button class="btn btn-outline-danger">
                ❤️ @Model.Post.Likes @(alreadyLikedPost ? "Unlike" : "Like")
            </button>
        </form>
    }
</div>

<h4 class="mt-4">Comments (@Model.Post.Comments.Count)</h4>

<div class="mt-3">
    @foreach (var c in Model.Post.Comments.OrderByDescending(x => x.CreatedOn))
    {
        var alreadyLikedComment = c.LikesCollection?.Any(l => l.UserId == userId) ?? false;

        <div class="p-3 mb-3" style="background-color:#1a1a1a; border:1px solid #FFD700; border-radius:6px;">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <div>
                    <b>@c.Author.UserName</b> • <small>@c.CreatedOn.ToLocalTime()</small>
                </div>
                @if (User.Identity?.IsAuthenticated ?? false)
                {
                    <form asp-action="LikeComment" asp-route-id="@c.Id" method="post" class="d-inline">
                        <button class="btn btn-sm btn-outline-danger">
                            ❤️ @c.Likes @(alreadyLikedComment ? "Unlike" : "Like")
                        </button>
                    </form>
                }
            </div>
            <div>@c.Content</div>
        </div>
    }
</div>

@if (User.Identity?.IsAuthenticated ?? false)
{
    <div class="mt-4 p-3" style="background-color:#1a1a1a; border:1px solid #FFD700; border-radius:6px;">
        <form asp-action="AddComment" asp-route-id="@Model.Post.Id" method="post">
            <div class="mb-3">
                <textarea asp-for="NewComment" rows="4" class="form-control"
                          style="background-color:#151515; color:white; border:1px solid #FFD700;"
                          placeholder="Write a comment..."></textarea>
            </div>
            <button class="btn btn-outline-primary">Comment</button>
        </form>
    </div>
}
else
{
    <div class="alert alert-info mt-3">Log in to comment.</div>
}

@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> signInManager
@inject UserManager<User> userManager

@* за динамичните елементи в менюто *@
@using PaladinHub.Data
@inject AppDbContext Db

@{
    var headerModel = Model as PaladinHub.Models.CombinedViewModel;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>@(ViewData["Title"] ?? "PaladinHub")</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="~/js/site.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PaladinHub.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="icon" href="~/images/WoW_icon.svg.png" type="image/svg+xml" asp-append-version="true" />
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-custom border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Home">Home</a>
                        </li>

                        <!-- HOLY -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="/Holy/Overview" id="holyDropdown" role="button">
                                Holy Paladin
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="holyDropdown">
                                @{
                                    var holyStatic = new (string Title, string Slug)[] {
                                                                ("Gear","gear"), ("Talents","talents"), ("Consumables","consumables"),
                                                                ("Rotation","rotation"), ("Stats","stats")
                                                                };

                                    var holyDb = Db.ContentPages
                                    .Where(p => p.Section == "holy" && p.IsPublished)
                                    .OrderBy(p => p.Title)
                                    .Select(p => new { p.Title, p.Slug })
                                    .ToList();

                                    var holyBySlug = new Dictionary<string, (string Title, bool FromDb)>(StringComparer.OrdinalIgnoreCase);
                                    foreach (var s in holyStatic) holyBySlug[s.Slug] = (s.Title, false);
                                    foreach (var p in holyDb) holyBySlug[p.Slug] = (p.Title, true);
                                }

                                @foreach (var kv in holyBySlug)
                                {
                                    var slug = kv.Key;
                                    var title = kv.Value.Title;
                                    <li class="position-relative">
                                        <a class="dropdown-item pe-5" href="/Holy/@(char.ToUpper(slug[0]) + slug.Substring(1))">@title</a>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <a class="text-danger position-absolute top-50 translate-middle-y"
                                               style="right: 12px; text-decoration: none;"
                                               title="Delete page"
                                               href="/Admin/PageBuilder/DeleteConfirm?section=Holy&slug=@slug">✕</a>
                                        }
                                    </li>
                                }

                                @if (User.IsInRole("Admin"))
                                {
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <a class="dropdown-item" href="/Admin/PageBuilder/Create?section=Holy">
                                            <i class="fa-solid fa-plus"></i> Add page
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>

                        <!-- PROTECTION -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="/Protection/Overview" id="protDropdown" role="button">
                                Protection Paladin
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="protDropdown">
                                @{
                                    var protStatic = new (string Title, string Slug)[] {
                                                                ("Gear","gear"), ("Talents","talents"), ("Consumables","consumables"),
                                                                ("Rotation","rotation"), ("Stats","stats")
                                                                };
                                    var protDb = Db.ContentPages
                                    .Where(p => p.Section == "protection" && p.IsPublished)
                                    .OrderBy(p => p.Title)
                                    .Select(p => new { p.Title, p.Slug })
                                    .ToList();
                                    var protBySlug = new Dictionary<string, (string Title, bool FromDb)>(StringComparer.OrdinalIgnoreCase);
                                    foreach (var s in protStatic) protBySlug[s.Slug] = (s.Title, false);
                                    foreach (var p in protDb) protBySlug[p.Slug] = (p.Title, true);
                                }

                                @foreach (var kv in protBySlug)
                                {
                                    var slug = kv.Key;
                                    var title = kv.Value.Title;
                                    <li class="position-relative">
                                        <a class="dropdown-item pe-5" href="/Protection/@(char.ToUpper(slug[0]) + slug.Substring(1))">@title</a>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <a class="text-danger position-absolute top-50 translate-middle-y"
                                               style="right: 12px; text-decoration: none;"
                                               title="Delete page"
                                               href="/Admin/PageBuilder/DeleteConfirm?section=Protection&slug=@slug">✕</a>
                                        }
                                    </li>
                                }

                                @if (User.IsInRole("Admin"))
                                {
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <a class="dropdown-item" href="/Admin/PageBuilder/Create?section=Protection">
                                            <i class="fa-solid fa-plus"></i> Add page
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>

                        <!-- RETRIBUTION -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="/Retribution/Overview" id="retriDropdown" role="button">
                                Retribution Paladin
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="retriDropdown">
                                @{
                                    var retStatic = new (string Title, string Slug)[] {
                                                                ("Gear","gear"), ("Talents","talents"), ("Consumables","consumables"),
                                                                ("Rotation","rotation"), ("Stats","stats")
                                                                };
                                    var retDb = Db.ContentPages
                                    .Where(p => p.Section == "retribution" && p.IsPublished)
                                    .OrderBy(p => p.Title)
                                    .Select(p => new { p.Title, p.Slug })
                                    .ToList();
                                    var retBySlug = new Dictionary<string, (string Title, bool FromDb)>(StringComparer.OrdinalIgnoreCase);
                                    foreach (var s in retStatic) retBySlug[s.Slug] = (s.Title, false);
                                    foreach (var p in retDb) retBySlug[p.Slug] = (p.Title, true);
                                }

                                @foreach (var kv in retBySlug)
                                {
                                    var slug = kv.Key;
                                    var title = kv.Value.Title;
                                    <li class="position-relative">
                                        <a class="dropdown-item pe-5" href="/Retribution/@(char.ToUpper(slug[0]) + slug.Substring(1))">@title</a>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <a class="text-danger position-absolute top-50 translate-middle-y"
                                               style="right: 12px; text-decoration: none;"
                                               title="Delete page"
                                               href="/Admin/PageBuilder/DeleteConfirm?section=Retribution&slug=@slug">✕</a>
                                        }
                                    </li>
                                }

                                @if (User.IsInRole("Admin"))
                                {
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <a class="dropdown-item" href="/Admin/PageBuilder/Create?section=Retribution">
                                            <i class="fa-solid fa-plus"></i> Add page
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/Discussions/Index">Discussion</a>
                        </li>

                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Admin" asp-controller="Database" asp-action="Index">Database</a>
                            </li>
                        }

                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>

                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Merchandise" asp-action="Merchandise">
                                <i class="fa-solid fa-store"></i> Merchandise
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Carts" asp-action="MyCart">
                                <i class="fa-solid fa-cart-shopping"></i> My Cart
                            </a>
                        </li>

                        @* ==== EDIT PAGE TOGGLE (Admin only) ==== *@
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <button id="pb-edit-toggle"
                                        class="btn btn-sm btn-warning ms-2"
                                        type="button"
                                        data-bs-toggle="collapse"
                                        data-bs-target="#pb-overlay-col"
                                        aria-expanded="false"
                                        aria-controls="pb-overlay-col">
                                    ✎ Edit Page
                                </button>
                            </li>
                        }

                        @if (signInManager.IsSignedIn(User))
                        {
                            @await Html.PartialAsync("_LoginPartial")
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div style="padding-top: 80px;">
        @if (headerModel != null)
        {
            @await Html.PartialAsync("_PageHeader", headerModel)
        }

        <main role="main" class="pb-5 container">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted text-center mt-5 py-3">
        <div class="container">
            &copy; @DateTime.Now.Year - PaladinHub | Made with 💛 for WoW Paladins
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        const navbar = document.querySelector(".navbar-custom");
        function updateNavbarVisibility(mouseY) {
            if (window.scrollY === 0 || mouseY <= 600) {
                navbar.style.top = "0";
            } else {
                navbar.style.top = "-100px";
            }
        }
        document.addEventListener("mousemove", e => updateNavbarVisibility(e.clientY));
        window.addEventListener("scroll", () => updateNavbarVisibility(999));
        updateNavbarVisibility(999);
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

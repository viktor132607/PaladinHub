@model PaladinHub.Models.PageBuilder.ContentPageViewModel
@inject PaladinHub.Services.PageBuilder.IBlockRenderer BlockRenderer

@{
    ViewData["Title"] = ViewData["Title"] ?? $"{Model.Section} – {Model.Title}";
    var isAdmin = User.IsInRole("Admin");
    var contentColClass = isAdmin ? "col-12 col-lg-9" : "col-12";
}

<section class="container" data-page-id="@Model.Id" data-page-uid="@Model.Uid" data-section="@Model.Section" data-slug="@Model.Slug">
    <h1 class="mt-3 mb-4 text-center">@Model.Title</h1>

    <div class="row g-4">
        @* Лявата колона с билдъра – само за админ *@
        @if (isAdmin)
        {
            <div id="pb-overlay-col" class="col-lg-3 d-none d-lg-block">
                @await Html.PartialAsync("_EditOverlay", new { JsonLayout = Model.JsonLayout })
            </div>
        }

        <div class="@contentColClass">
            @{
                string html;
                try
                {
                    html = await BlockRenderer.RenderAsync(Model?.JsonLayout ?? "[]");
                }
                catch (Exception ex)
                {
                    html = $@"<div class=""alert alert-danger"">
                        Preview failed while rendering layout:<br/>
                        <code>{System.Net.WebUtility.HtmlEncode(ex.Message)}</code>
                        </div>";
                }
            }

            @if (string.IsNullOrWhiteSpace(html))
            {
                <div class="alert alert-warning">No blocks to render yet.</div>
            }
            else
            {
                @Html.Raw(html)
            }
        </div>
    </div>
</section>
